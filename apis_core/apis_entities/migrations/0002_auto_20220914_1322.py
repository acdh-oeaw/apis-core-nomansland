# Generated by Django 3.1.14 on 2022-09-14 13:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('apis_relations', '0001_initial'),
        ('apis_vocabularies', '0001_initial'),
        ('apis_entities', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='work',
            name='event_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='work_set', through='apis_relations.EventWork', to='apis_vocabularies.EventWorkRelation'),
        ),
        migrations.AddField(
            model_name='work',
            name='expression_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='work_set', through='apis_relations.ExpressionWork', to='apis_vocabularies.ExpressionWorkRelation'),
        ),
        migrations.AddField(
            model_name='work',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='work_set', through='apis_relations.InstitutionWork', to='apis_vocabularies.InstitutionWorkRelation'),
        ),
        migrations.AddField(
            model_name='work',
            name='kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis_vocabularies.worktype'),
        ),
        migrations.AddField(
            model_name='work',
            name='manuscript_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='work_set', through='apis_relations.ManuscriptWork', to='apis_vocabularies.ManuscriptWorkRelation'),
        ),
        migrations.AddField(
            model_name='work',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='work_set', through='apis_relations.PersonWork', to='apis_vocabularies.PersonWorkRelation'),
        ),
        migrations.AddField(
            model_name='work',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='work_set', through='apis_relations.PlaceWork', to='apis_vocabularies.PlaceWorkRelation'),
        ),
        migrations.AddField(
            model_name='work',
            name='subject_headings',
            field=models.ManyToManyField(blank=True, null=True, to='apis_vocabularies.SubjectHeadings'),
        ),
        migrations.AddField(
            model_name='work',
            name='workB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='workA_set', through='apis_relations.WorkWork', to='apis_vocabularies.WorkWorkRelation'),
        ),
        migrations.AddField(
            model_name='work',
            name='workB_set',
            field=models.ManyToManyField(blank=True, related_name='workA_set', through='apis_relations.WorkWork', to='apis_entities.Work'),
        ),
        migrations.AddField(
            model_name='place',
            name='event_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlaceEvent', to='apis_vocabularies.PlaceEventRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='event_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlaceEvent', to='apis_entities.Event'),
        ),
        migrations.AddField(
            model_name='place',
            name='expression_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlaceExpression', to='apis_vocabularies.PlaceExpressionRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='expression_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlaceExpression', to='apis_entities.Expression'),
        ),
        migrations.AddField(
            model_name='place',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.InstitutionPlace', to='apis_vocabularies.InstitutionPlaceRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis_vocabularies.placetype'),
        ),
        migrations.AddField(
            model_name='place',
            name='manuscript_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.ManuscriptPlace', to='apis_vocabularies.ManuscriptPlaceRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PersonPlace', to='apis_vocabularies.PersonPlaceRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='placeB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='placeA_set', through='apis_relations.PlacePlace', to='apis_vocabularies.PlacePlaceRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='placeB_set',
            field=models.ManyToManyField(blank=True, related_name='placeA_set', through='apis_relations.PlacePlace', to='apis_entities.Place'),
        ),
        migrations.AddField(
            model_name='place',
            name='work_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlaceWork', to='apis_vocabularies.PlaceWorkRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='work_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlaceWork', to='apis_entities.Work'),
        ),
        migrations.AddField(
            model_name='person',
            name='event_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonEvent', to='apis_vocabularies.PersonEventRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='event_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonEvent', to='apis_entities.Event'),
        ),
        migrations.AddField(
            model_name='person',
            name='expression_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.ExpressionPerson', to='apis_vocabularies.ExpressionPersonRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonInstitution', to='apis_vocabularies.PersonInstitutionRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='institution_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonInstitution', to='apis_entities.Institution'),
        ),
        migrations.AddField(
            model_name='person',
            name='manuscript_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.ManuscriptPerson', to='apis_vocabularies.ManuscriptPersonRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='personB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='personA_set', through='apis_relations.PersonPerson', to='apis_vocabularies.PersonPersonRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='personB_set',
            field=models.ManyToManyField(blank=True, related_name='personA_set', through='apis_relations.PersonPerson', to='apis_entities.Person'),
        ),
        migrations.AddField(
            model_name='person',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonPlace', to='apis_vocabularies.PersonPlaceRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='place_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonPlace', to='apis_entities.Place'),
        ),
        migrations.AddField(
            model_name='person',
            name='principal_role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis_vocabularies.principalrole'),
        ),
        migrations.AddField(
            model_name='person',
            name='profession',
            field=models.ManyToManyField(blank=True, to='apis_vocabularies.ProfessionType'),
        ),
        migrations.AddField(
            model_name='person',
            name='title',
            field=models.ManyToManyField(blank=True, to='apis_vocabularies.Title'),
        ),
        migrations.AddField(
            model_name='person',
            name='work_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonWork', to='apis_vocabularies.PersonWorkRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='work_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonWork', to='apis_entities.Work'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='expression_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptExpression', to='apis_vocabularies.ManuscriptExpressionRelation'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='expression_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptExpression', to='apis_entities.Expression'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptInstitution', to='apis_vocabularies.ManuscriptInstitutionRelation'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='institution_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptInstitution', to='apis_entities.Institution'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='manuscript_conditions',
            field=models.ManyToManyField(blank=True, null=True, to='apis_vocabularies.ManuscriptConditions'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptPerson', to='apis_vocabularies.ManuscriptPersonRelation'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='person_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptPerson', to='apis_entities.Person'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptPlace', to='apis_vocabularies.ManuscriptPlaceRelation'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='place_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptPlace', to='apis_entities.Place'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='work_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptWork', to='apis_vocabularies.ManuscriptWorkRelation'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='work_set',
            field=models.ManyToManyField(blank=True, related_name='manuscript_set', through='apis_relations.ManuscriptWork', to='apis_entities.Work'),
        ),
        migrations.AddField(
            model_name='institution',
            name='event_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionEvent', to='apis_vocabularies.InstitutionEventRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='event_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionEvent', to='apis_entities.Event'),
        ),
        migrations.AddField(
            model_name='institution',
            name='institutionB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institutionA_set', through='apis_relations.InstitutionInstitution', to='apis_vocabularies.InstitutionInstitutionRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='institutionB_set',
            field=models.ManyToManyField(blank=True, related_name='institutionA_set', through='apis_relations.InstitutionInstitution', to='apis_entities.Institution'),
        ),
        migrations.AddField(
            model_name='institution',
            name='kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis_vocabularies.institutiontype'),
        ),
        migrations.AddField(
            model_name='institution',
            name='manuscript_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.ManuscriptInstitution', to='apis_vocabularies.ManuscriptInstitutionRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.PersonInstitution', to='apis_vocabularies.PersonInstitutionRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionPlace', to='apis_vocabularies.InstitutionPlaceRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='place_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionPlace', to='apis_entities.Place'),
        ),
        migrations.AddField(
            model_name='institution',
            name='work_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionWork', to='apis_vocabularies.InstitutionWorkRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='work_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionWork', to='apis_entities.Work'),
        ),
        migrations.AddField(
            model_name='expression',
            name='language',
            field=models.ManyToManyField(blank=True, null=True, to='apis_vocabularies.Language'),
        ),
        migrations.AddField(
            model_name='expression',
            name='manuscript_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='expression_set', through='apis_relations.ManuscriptExpression', to='apis_vocabularies.ManuscriptExpressionRelation'),
        ),
        migrations.AddField(
            model_name='expression',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='expression_set', through='apis_relations.ExpressionPerson', to='apis_vocabularies.ExpressionPersonRelation'),
        ),
        migrations.AddField(
            model_name='expression',
            name='person_set',
            field=models.ManyToManyField(blank=True, related_name='expression_set', through='apis_relations.ExpressionPerson', to='apis_entities.Person'),
        ),
        migrations.AddField(
            model_name='expression',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='expression_set', through='apis_relations.PlaceExpression', to='apis_vocabularies.PlaceExpressionRelation'),
        ),
        migrations.AddField(
            model_name='expression',
            name='script_body',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ScriptTypeBody_set', to='apis_vocabularies.scripttype'),
        ),
        migrations.AddField(
            model_name='expression',
            name='script_title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ScriptTypeTitle_set', to='apis_vocabularies.scripttype'),
        ),
        migrations.AddField(
            model_name='expression',
            name='work_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='expression_set', through='apis_relations.ExpressionWork', to='apis_vocabularies.ExpressionWorkRelation'),
        ),
        migrations.AddField(
            model_name='expression',
            name='work_set',
            field=models.ManyToManyField(blank=True, related_name='expression_set', through='apis_relations.ExpressionWork', to='apis_entities.Work'),
        ),
        migrations.AddField(
            model_name='event',
            name='eventB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='eventA_set', through='apis_relations.EventEvent', to='apis_vocabularies.EventEventRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='eventB_set',
            field=models.ManyToManyField(blank=True, related_name='eventA_set', through='apis_relations.EventEvent', to='apis_entities.Event'),
        ),
        migrations.AddField(
            model_name='event',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.InstitutionEvent', to='apis_vocabularies.InstitutionEventRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis_vocabularies.eventtype'),
        ),
        migrations.AddField(
            model_name='event',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.PersonEvent', to='apis_vocabularies.PersonEventRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.PlaceEvent', to='apis_vocabularies.PlaceEventRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='work_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.EventWork', to='apis_vocabularies.EventWorkRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='work_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.EventWork', to='apis_entities.Work'),
        ),
    ]
